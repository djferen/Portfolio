# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  Setup_Env:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: |
        sudo apt-get update
        sudo apt-get install -y libgtest-dev cmake
        dpkg-query -L libgtest-dev
        mkdir -p $HOME/build
        cd $HOME/build
        sudo cmake /usr/src/googletest/googletest
        sudo make
        sudo cp lib/libgtest* /usr/lib/
        cd ..
        sudo rm -rf build
        sudo mkdir /usr/local/lib/googletest
        sudo ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a
        sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a
    - uses: actions/cache@v2
      id: cache-gtest
      with:
        path: |
          /usr/lib/libgtest*.a
          /usr/local/lib/googletest/libgtest*.a
        key: ${{ github.sha }}

  Build:
    runs-on: ubuntu-latest
    needs: [Setup_Env]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v2
      id: cache-gtest
      with:
        path: |
          /usr/lib/libgtest*.a
          /usr/local/lib/googletest/libgtest*.a
        key: ${{ github.sha }}
    - run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
