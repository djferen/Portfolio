# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  Setup_Env:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache gtest
      id: cache-gtest
      uses: actions/cache@v3
      with:
        path: |
          /usr/lib/libgtest*.a
          /usr/local/lib/googletest/libgtest*.a
        key: ${{ runner.os }}-gtest

    - name: Install gtest
        # Build gtest in a workspace away from the source
        # Install in a common location in the runner
        # Also list the files that are installed when libgtest-dev is installed for environment reporting
      if: steps.cache-gtest.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtest-dev cmake
        dpkg-query -L libgtest-dev
        mkdir -p $HOME/build
        cd $HOME/build
        sudo cmake /usr/src/googletest/googletest
        sudo make
        sudo cp lib/libgtest* /usr/lib/
        cd ..
        sudo rm -rf build
        sudo mkdir /usr/local/lib/googletest
        sudo ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a
        sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a

  Build:
    needs: [Setup_Env]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  Legacy_Test:
    needs: [Build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      run: make Test

  Test_with_ctest:
    needs: [Build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
