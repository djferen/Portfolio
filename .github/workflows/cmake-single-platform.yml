name: Build and Test Portfolio

on:
  push:
    branches: [ "*" ]
#  pull_request:
#    branches: [ "master" ]

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.

    permissions:
      contents: read
      packages: write
      attestations: write
      # 
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: my-docker-hub-namespace/my-docker-hub-repository

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: 
            - ${{ steps.meta.outputs.tags }}
            - test
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run docker based build
        run: make docker-build

      # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see "[AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)." 
      # - name: Generate artifact attestation
      #  continue-on-error: true
      #  uses: actions/attest-build-provenance@v1
      #  with:
      #    subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #    subject-digest: ${{ steps.push.outputs.digest }}
      #   push-to-registry: true

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Prerequisites
      run: |
        make install-prerequisites

    - name: Lint
      run: make check-format

    - name: Build Env
      run: make build-env run-env

    - name: Build Debug
      run: BUILD_TYPE=Debug make clean build

    - name: Test Debug
      working-directory: build
      run: make Test

    - name: Build Release
      run: make clean build
  
    - name: Test Release
      working-directory: build
      run: make Test

    - name: Python
      run: |
        make install-python
        make run-python

    - name: Rust
      run: |
        make install-rust
        make build-rust
        make test-rust
